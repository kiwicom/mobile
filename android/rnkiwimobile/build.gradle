apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven'
apply from: "./versions.gradle"
apply from: "../dependencies.gradle"

project.ext.react = [
    entryFile: "app/native.js",
    resourcesDirStagingRelease: "${projectDir}/src/main/assets/res",
    resourcesDirRelease: "${projectDir}/src/main/assets/res",
    enableHermes: true
]

apply from: "./react-library.gradle"
apply from: "./codepush-library.gradle"

android {
    defaultConfig {
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    buildTypes {
        stagingRelease {
            matchingFallbacks = ['release']
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        pickFirst '**/armeabi-v7a/libc++_shared.so'
        pickFirst '**/x86/libc++_shared.so'
        pickFirst '**/arm64-v8a/libc++_shared.so'
        pickFirst '**/x86_64/libc++_shared.so'
        pickFirst '**/x86/libjsc.so'
        pickFirst '**/armeabi-v7a/libjsc.so'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.facebook.react:react-native:$reactNativeVersion"
    implementation "androidx.appcompat:appcompat:$supportVersion"
    api "com.trinerdis.skypicker:react-native-maps:$reactNativeMaps-SNAPSHOT"
    api "com.trinerdis.skypicker:react-native-code-push:$reactNativeCodePush-SNAPSHOT"
    api "com.trinerdis.skypicker:react-native-community_async-storage:$reactNativeAsyncStorage-SNAPSHOT"
    api "com.trinerdis.skypicker:react-native-community_netinfo:$reactNativeNetInfo-SNAPSHOT"
    api "com.trinerdis.skypicker:react-native-webview:$reactNativeWebView-SNAPSHOT"
    api "com.trinerdis.skypicker:react-native-gesture-handler:$reactNativeGestureHandler-SNAPSHOT"

    api("com.google.android.gms:play-services-base:$playServicesBaseVersion")
    api("com.google.android.gms:play-services-maps:$playServicesMapsVersion")

    api "com.trinerdis.skypicker:react-native-native-modules:$reactNativeNativeModules-SNAPSHOT"


    api "com.trinerdis.skypicker:logging:$loggingVersion-SNAPSHOT"

    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    def hermesPath = "../../node_modules/hermesvm/android/";	
    debugImplementation files(hermesPath + "hermes-debug.aar")	
    stagingReleaseImplementation files(hermesPath + "hermes-release.aar")
    releaseImplementation "com.kiwi.android:hermesvm:$hermesVmVersion-SNAPSHOT"
    implementation "com.kiwi.android:android-jsc:$jscVersion-SNAPSHOT"

}

publishAndroidLibrary("com.trinerdis.skypicker", "rnkiwimobile", "$rnKiwiMobileVersion-SNAPSHOT")

publishing {
    publications {
        hermes(MavenPublication) {
            groupId = "com.kiwi.android"
            artifactId = "hermesvm"
            version = "$hermesVmVersion-SNAPSHOT"

            artifact('../../node_modules/hermesvm/android/hermes-release.aar')
        }
    }
}

publishing {
    publications {
        androidJsc(MavenPublication) {
            groupId = "com.kiwi.android"
            artifactId = "android-jsc"
            version = "$jscVersion-SNAPSHOT"

            artifact('../../node_modules/jsc-android/dist/org/webkit/android-jsc/r245459/android-jsc-r245459.aar')
        }
    }
}
