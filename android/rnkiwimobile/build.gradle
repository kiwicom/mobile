apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven'
apply from: "./versions.gradle"
apply from: "../dependencies.gradle"

android {
    defaultConfig {
        minSdkVersion minSdkVersionVar
        compileSdkVersion compileSdkVersionVar
        targetSdkVersion targetSdkVersionVar

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    sourceSets {
        main {
            assets {
                srcDir "../../.build/android/assets"
            }
            res {
                srcDir "../../.build/android/res"
            }
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    buildTypes {
        debug {
            // Note: CodePush updates should not be tested in Debug mode as they are overriden by the RN packager.
            // However, because CodePush checks for updates in all modes, we must supply a key.
            buildConfigField "String", "CODEPUSH_KEY", '""'
        }

        stagingRelease {
            buildConfigField "String", "CODEPUSH_KEY", '""'
            // Note: It is a good idea to provide matchingFallbacks for the new buildType you create to prevent build issues
            // Add the following line if not already there
            matchingFallbacks = ['release']
        }

        release {
            buildConfigField "String", "CODEPUSH_KEY", '""'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.facebook.react:react-native:$reactNativeVersion"
    api "com.trinerdis.skypicker:react-native-maps:$reactNativeMaps-SNAPSHOT"
    api "com.trinerdis.skypicker:react-native-tooltips:$reactNativeTooltips-SNAPSHOT"
    api "com.trinerdis.skypicker:react-native-zip-archive:$reactNativeZipArchive-SNAPSHOT"
    api "com.trinerdis.skypicker:react-native-code-push:$reactNativeCodePush-SNAPSHOT"

    api("com.google.android.gms:play-services-base:$playServicesVersion")
    api("com.google.android.gms:play-services-maps:$playServicesVersion")

    api "com.trinerdis.skypicker:react-native-native-modules:$reactNativeNativeModules-SNAPSHOT"


    implementation "com.trinerdis.skypicker:infinario:$infinarioVersion-SNAPSHOT"
    compileOnly "com.trinerdis.skypicker:logging:$loggingVersion-SNAPSHOT"

    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
}

buildDir = "$rootProject.projectDir/build"

tasks.create('uploadTrinerdis', Upload.class) {
    configuration = project.configurations.archives
    repositories {
        mavenDeployer {
            repository(url: "http://trinerdis.cz:8000/repository/snapshots/") {
                authentication(userName: "deployment", password: System.getenv("ANDROID_DEPLOYMENT_PASSWORD"))
                pom.version = "$version-SNAPSHOT"
                pom.artifactId = "rnkiwimobile"
                pom.groupId = "com.trinerdis.skypicker"
            }
        }
    }
}

repositories {
    mavenCentral()
}
