import groovy.json.JsonSlurper

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: "../dependencies.gradle"

def inputFile = new File("${rootDir}/../.build/package.json")
def packageJson = new JsonSlurper().parseText(inputFile.text)

def codePushPropertiesFile = new File("${rootDir}/playground/codepush.properties")
def codePushProperties = null
if (codePushPropertiesFile.exists()) {
    codePushProperties = new Properties()
    codePushProperties.load(new FileInputStream(codePushPropertiesFile))
}

def mainPackageJson = new File("${rootDir}/../package.json")
def codePushVersion = new JsonSlurper().parseText(mainPackageJson.text)['rnkiwimobile']['code-push-target-binary-version']

def stageCodePushKey = codePushProperties != null ? codePushProperties["STAGING_KEY"] : ""
def productionCodePushKey = codePushProperties != null ? codePushProperties["PRODUCTION_KEY"] : ""

android {
    compileSdkVersion compileSdkVersionVar
    defaultConfig {
        applicationId "com.kiwi.mobile.rnandroidplayground"
        minSdkVersion minSdkVersionVar
        targetSdkVersion targetSdkVersionVar
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }

    project.ext.rnKiwiMobileVersion = packageJson['version']

    signingConfigs {
        stagingRelease {
            // Just a fake keystore / fake password
            storeFile file("playground-key-staging.keystore")
            storePassword 'kiwireactnative'
            keyAlias 'my-key-alias'
            keyPassword 'kiwireactnative'
        }
        release {
            // Just a fake keystore / fake password
            storeFile file("playground-key.keystore")
            storePassword 'kiwireactnative'
            keyAlias 'my-key-alias'
            keyPassword 'kiwireactnative'
        }
    }
    buildTypes {
        debug {
            // Note: CodePush updates should not be tested in Debug mode as they are overriden by the RN packager.
            // However, because CodePush checks for updates in all modes, we must supply a key.
            buildConfigField "String", "CODEPUSH_KEY", '""'
        }
        stagingRelease {
            buildConfigField "String", "CODEPUSH_KEY", "\"${stageCodePushKey}\""
            buildConfigField "String", "CODEPUSH_VERSION", "\"${codePushVersion}\""
            signingConfig signingConfigs.stagingRelease
            matchingFallbacks = ['release']
        }
        release {
            buildConfigField "String", "CODEPUSH_KEY", "\"${productionCodePushKey}\""
            buildConfigField "String", "CODEPUSH_VERSION", "\"${codePushVersion}\""
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    lintOptions {
        disable 'GoogleAppIndexingWarning'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    /**
     * In debug mode, it will use the local rnkiwimobile project.
     * If we don't have anything in .build/android, then it will also use the packager
     *
     * In release mode, it will use the rnkiwimobile from Trinerdis (without packager running)
     */
    debugImplementation project(':rnkiwimobile')
    // You can choose staging to use the Staging CodePush key
    stagingReleaseImplementation project(':rnkiwimobile')
    releaseImplementation "com.trinerdis.skypicker:rnkiwimobile:$rnKiwiMobileVersion-SNAPSHOT"

    implementation "com.trinerdis.skypicker:logging:$loggingVersion-SNAPSHOT"

    implementation "com.android.support:multidex:1.0.3"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
