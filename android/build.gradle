buildscript {
    apply from: "$rootDir/dependencies.gradle"
    apply from: "$rootDir/deployment.gradle"
    apply from: "$rootDir/rnkiwimobile/versions.gradle"

    repositories {
        // this line will fix Could not find com.android.tools.build:gradle:3.0.1
        // https://stackoverflow.com/a/47456492/3135248
        mavenLocal()
        google()
        reactNativeFromUnpkg(it, reactNativeVersion)
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$gradlePluginVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "digital.wup:android-maven-publish:$androidMavenPublishVersion"
    }
}

// https://github.com/corymsmith/react-native-fabric/issues/200
subprojects {
    buildscript {
        apply from: "$rootDir/deployment.gradle"

        repositories {
            mavenLocal()
            google()
            reactNativeFromUnpkg(it, reactNativeVersion)
            fabric(it)
            kiwi(it)
            jcenter()
        }

        dependencies {
            classpath "com.android.tools.build:gradle:3.4.0-alpha04"
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
            classpath "digital.wup:android-maven-publish:$androidMavenPublishVersion"
        }
    }

    apply plugin: 'digital.wup.android-maven-publish'

    repositories {
        mavenLocal()
        google()
        reactNativeFromUnpkg(it, reactNativeVersion)
        fabric(it)
        kiwi(it)
        jcenter()
    }
}

// Override configuration for external sub-projects.
allprojects {
    buildDir = "$rootDir/${project.name}/build"

    afterEvaluate {
        def androidConfiguration = {
            android {
                compileSdkVersion = rootProject.ext.compileSdkVersion
                buildToolsVersion = rootProject.ext.buildToolsVersion

                defaultConfig {
                    minSdkVersion rootProject.ext.minSdkVersion
                    targetSdkVersion rootProject.ext.targetSdkVersion
                }

                lintOptions {
                    abortOnError false
                }
            }
        }

        pluginManager.withPlugin("com.android.library", androidConfiguration)
        pluginManager.withPlugin("com.android.application", androidConfiguration)
    }

    switch (project.name) {
        case 'react-native':
            configure(project) {
                publishAndroidLibrary("com.facebook.react", project.name, "$reactNativeVersion")
            }
            break
        case 'react-native-code-push':
            configure(project) {
                publishAndroidLibrary("com.trinerdis.skypicker", project.name, "$reactNativeCodePush-SNAPSHOT")
            }
            break
        case 'react-native-maps':
            configure(project) {
                publishCustomLibrary("com.trinerdis.skypicker", project.name, "$reactNativeMaps-SNAPSHOT") {
                    it.artifact("$buildDir/outputs/aar/${project.name}-release.aar")
                }
            }
            break
        case 'react-native-tooltips':
            configure(project) {
                publishAndroidLibrary("com.trinerdis.skypicker", project.name, "$reactNativeTooltips-SNAPSHOT")
            }
            break
        case 'react-native-zip-archive':
            configure(project) {
                publishAndroidLibrary("com.trinerdis.skypicker", project.name, "$reactNativeZipArchive-SNAPSHOT")
            }
            break
    }
}
