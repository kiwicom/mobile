buildscript {
    apply from: "../dependencies.gradle"

    repositories {
        google()
        jcenter()
        mavenCentral()

        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradlePluginVersion"
    }
}

subprojects {
    apply plugin: 'maven'
    apply plugin: 'com.android.library'

    repositories {
        google()
        jcenter()

        maven {
            url 'http://trinerdis.cz:8000/repository/snapshots/'
        }
    }

    android {
        sourceSets {
            main {
                assets {
                    srcDirs += "$rootDir/assets"
                }
            }
        }
    }

    def iconFontsDir = "$rootDir/../../node_modules/react-native-vector-icons/Fonts"
    def iconFontNames = ["MaterialIcons.ttf"]
    def assetsDir = "$rootDir/assets"

    gradle.projectsEvaluated {
        // Grab all build types and product flavors.
        def buildTypes = android.buildTypes.collect { type -> type.name }
        def productFlavors = android.productFlavors.collect { flavor -> flavor.name }

        // When no product flavors defined, use empty.
        if (!productFlavors) {
            productFlavors.add("")
        }

        productFlavors.each { productFlavorName ->
            buildTypes.each { buildTypeName ->
                // Create variant and target names.
                def flavorNameCapitalized = "${productFlavorName.capitalize()}"
                def buildNameCapitalized = "${buildTypeName.capitalize()}"
                def targetName = "${flavorNameCapitalized}${buildNameCapitalized}"

                // Create task for copying fonts.
                def currentFontTask = tasks.create(name: "copy${targetName}IconFonts", type: Copy) {
                    iconFontNames.each { name ->
                        from(iconFontsDir)
                        include(name)
                        into("${assetsDir}/fonts/")
                    }
                }

                tasks.findByPath("merge${targetName}Assets")
                        .dependsOn(currentFontTask)
            }
        }
    }

    buildDir = "$rootProject.projectDir/build"

    tasks.create('uploadTrinerdis', Upload.class) {
        configuration = project.configurations.archives
        repositories {
            mavenDeployer {
                repository(url: "http://trinerdis.cz:8000/repository/snapshots/") {
                    authentication(userName: "deployment", password: System.getenv("ANDROID_DEPLOYMENT_PASSWORD"))
                    pom.version = "$version-SNAPSHOT"
                    pom.artifactId = "react-native-vector-icons"
                    pom.groupId = "com.trinerdis.skypicker"
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
