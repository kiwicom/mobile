// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`passes props to the original Image component 1`] = `
<ImageProgress
  errorContainerStyle={
    Object {
      "alignItems": "center",
      "bottom": 0,
      "justifyContent": "center",
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
  indicator={[Function]}
  indicatorContainerStyle={
    Object {
      "alignItems": "center",
      "bottom": 0,
      "justifyContent": "center",
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
  resizeMode="cover"
  source={
    Object {
      "uri": "http://image.png",
    }
  }
  style={
    Array [
      Object {
        "borderRadius": 2,
        "height": 75,
        "width": 50,
      },
      Object {
        "overflow": "hidden",
      },
    ]
  }
  threshold={50}
/>
`;

exports[`returns MissingImage component for invalid URI 1`] = `
<MissingImage
  indicator={[Function]}
  source={
    Object {
      "uri": null,
    }
  }
/>
`;

exports[`returns MissingImage component for invalid URI 2`] = `
<MissingImage
  indicator={[Function]}
  source={
    Object {
      "uri": undefined,
    }
  }
/>
`;

exports[`returns MissingImage component when data saver enabled 1`] = `
<MissingImage
  dataSaverEnabled={true}
  indicator={[Function]}
  source={
    Object {
      "uri": "http://image.png",
    }
  }
/>
`;

exports[`returns MissingImage component when data saver enabled 2`] = `
<ImageProgress
  dataSaverEnabled={false}
  errorContainerStyle={
    Object {
      "alignItems": "center",
      "bottom": 0,
      "justifyContent": "center",
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
  indicator={[Function]}
  indicatorContainerStyle={
    Object {
      "alignItems": "center",
      "bottom": 0,
      "justifyContent": "center",
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
  source={
    Object {
      "uri": "http://image.png",
    }
  }
  style={
    Array [
      undefined,
      Object {
        "overflow": "hidden",
      },
    ]
  }
  threshold={50}
/>
`;
